{"version":3,"file":"index-BA5ZXjrm.js","sources":["../../src/stores/playlist.ts","../../src/views/Playlist/index.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport { musicApi, formatSong } from '@/api/music'\n\nexport interface PlaylistInfo {\n  id: number\n  name: string\n  cover: string\n  description?: string\n  trackCount: number\n  playCount?: number\n  createTime?: string\n  updateTime?: string\n  creator: {\n    id: number\n    name: string\n    avatar?: string\n  }\n  tags?: string[]\n}\n\nexport interface Song {\n  id: number\n  name: string\n  artists: Array<{ id: number; name: string }>\n  album?: { id: number; name: string }\n  cover?: string\n  duration?: number\n  url?: string\n  addTime?: string\n}\n\nexport const usePlaylistStore = defineStore('playlist', () => {\n  // 状态\n  const currentPlaylist = ref<PlaylistInfo | null>(null)\n  const playlistSongs = ref<Song[]>([])\n  const loading = ref(false)\n  \n  // 方法\n  const loadPlaylist = async (id: number) => {\n    if (loading.value) return\n    \n    loading.value = true\n    try {\n      console.log('加载歌单:', id)\n      \n      // 调用真实API获取歌单详情\n      const playlistResponse = await musicApi.getPlaylistDetail(id)\n      const playlist = playlistResponse.playlist\n      \n      // 设置歌单信息\n      currentPlaylist.value = {\n        id: playlist.id,\n        name: playlist.name,\n        cover: playlist.coverImgUrl || playlist.picUrl,\n        description: playlist.description,\n        trackCount: playlist.trackCount || playlist.tracks?.length || 0,\n        playCount: playlist.playCount,\n        createTime: new Date(playlist.createTime).toLocaleDateString(),\n        updateTime: new Date(playlist.updateTime || playlist.createTime).toLocaleDateString(),\n        creator: {\n          id: playlist.creator.userId,\n          name: playlist.creator.nickname,\n          avatar: playlist.creator.avatarUrl\n        },\n        tags: playlist.tags || []\n      }\n      \n      // 获取歌单歌曲列表\n      try {\n        const songsResponse = await musicApi.getPlaylistTracks(id, 100)\n        playlistSongs.value = songsResponse.songs ? songsResponse.songs.map(formatSong) : []\n        console.log('歌单歌曲加载完成:', playlistSongs.value.length)\n      } catch (songsError) {\n        console.error('获取歌单歌曲失败:', songsError)\n        // 如果获取歌曲失败，使用歌单详情中的tracks\n        if (playlist.tracks) {\n          playlistSongs.value = playlist.tracks.map(formatSong)\n        } else {\n          playlistSongs.value = []\n        }\n      }\n      \n    } catch (error) {\n      console.error('加载歌单失败:', error)\n      throw error\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  const addSongToPlaylist = async (playlistId: number, songId: number) => {\n    // TODO: 添加歌曲到歌单\n    console.log('添加歌曲到歌单', playlistId, songId)\n  }\n  \n  const removeSongFromPlaylist = async (playlistId: number, songId: number) => {\n    // TODO: 从歌单移除歌曲\n    const index = playlistSongs.value.findIndex(song => song.id === songId)\n    if (index > -1) {\n      playlistSongs.value.splice(index, 1)\n      if (currentPlaylist.value) {\n        currentPlaylist.value.trackCount--\n      }\n    }\n  }\n  \n  const subscribePlaylist = async (playlistId: number) => {\n    // TODO: 收藏歌单\n    console.log('收藏歌单', playlistId)\n  }\n  \n  const unsubscribePlaylist = async (playlistId: number) => {\n    // TODO: 取消收藏歌单\n    console.log('取消收藏歌单', playlistId)\n  }\n  \n  const clearPlaylist = () => {\n    currentPlaylist.value = null\n    playlistSongs.value = []\n  }\n  \n  return {\n    // 状态\n    currentPlaylist,\n    playlistSongs,\n    loading,\n    \n    // 方法\n    loadPlaylist,\n    addSongToPlaylist,\n    removeSongFromPlaylist,\n    subscribePlaylist,\n    unsubscribePlaylist,\n    clearPlaylist\n  }\n})","<template>\n  <IonPage>\n    <!-- 沉浸式头部，无IonHeader -->\n    <IonContent :fullscreen=\"true\" class=\"playlist-content\">\n      <div class=\"playlist-page\">\n        <!-- 沉浸式歌单头部 -->\n        <div class=\"playlist-hero\" :style=\"{ backgroundImage: `url(${playlistInfo?.cover || '/images/album.jpg'})` }\">\n          <!-- 背景渐变遮罩 -->\n          <div class=\"hero-overlay\"></div>\n          \n          <!-- 顶部操作栏 -->\n          <div class=\"top-bar\">\n            <IonButton \n              fill=\"clear\" \n              color=\"light\"\n              @click=\"goBack\"\n              class=\"back-button\"\n            >\n              <IonIcon :icon=\"arrowBackOutline\" />\n            </IonButton>\n            \n            <div class=\"top-actions\">\n              <IonButton fill=\"clear\" color=\"light\" @click=\"sharePlaylist\">\n                <IonIcon :icon=\"shareOutline\" />\n              </IonButton>\n              <IonButton fill=\"clear\" color=\"light\" @click=\"moreActions\">\n                <IonIcon :icon=\"ellipsisVerticalOutline\" />\n              </IonButton>\n            </div>\n          </div>\n          \n          <!-- 歌单信息 - 紧凑横向布局 -->\n          <div class=\"hero-content\">\n            <div class=\"playlist-main\">\n              <div class=\"playlist-cover-container\">\n                <div class=\"playlist-cover\">\n                  <img \n                    :src=\"playlistInfo?.cover || '/images/album.jpg'\" \n                    :alt=\"playlistInfo?.name\"\n                    @error=\"handleImageError\"\n                  />\n                  <div class=\"play-overlay\" @click=\"playAll\">\n                    <div class=\"play-button\">\n                      <IonIcon :icon=\"play\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"playlist-info\">\n                <h1 class=\"playlist-title\">{{ playlistInfo?.name || '加载中...' }}</h1>\n                \n                <div class=\"creator-info\">\n                  <img \n                    :src=\"playlistInfo?.creator?.avatar || '/images/default-avatar.jpg'\" \n                    :alt=\"playlistInfo?.creator?.name\"\n                    class=\"creator-avatar\"\n                    @error=\"handleAvatarError\"\n                  />\n                  <span class=\"creator-name\">{{ playlistInfo?.creator?.name }}</span>\n                </div>\n                \n                <div class=\"playlist-stats\">\n                  <span>{{ playlistInfo?.trackCount || 0 }}首</span>\n                  <span class=\"separator\">•</span>\n                  <span>{{ formatPlayCount(playlistInfo?.playCount) }}次播放</span>\n                </div>\n              </div>\n            </div>\n            \n            <!-- 操作按钮 -->\n            <div class=\"hero-actions\">\n              <IonButton \n                expand=\"block\" \n                class=\"play-all-button\"\n                @click=\"playAll\"\n                :disabled=\"!songs.length\"\n              >\n                <IonIcon :icon=\"play\" slot=\"start\" />\n                播放全部\n              </IonButton>\n              \n              <div class=\"action-row\">\n                <IonButton \n                  fill=\"clear\" \n                  size=\"small\"\n                  color=\"light\"\n                  @click=\"toggleSubscribe\"\n                  :color=\"isSubscribed ? 'danger' : 'light'\"\n                >\n                  <IonIcon :icon=\"isSubscribed ? heart : heartOutline\" />\n                </IonButton>\n                \n                <IonButton fill=\"clear\" size=\"small\" color=\"light\" @click=\"downloadAll\">\n                  <IonIcon :icon=\"downloadOutline\" />\n                </IonButton>\n                \n                <IonButton fill=\"clear\" size=\"small\" color=\"light\" @click=\"sharePlaylist\">\n                  <IonIcon :icon=\"shareOutline\" />\n                </IonButton>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 歌曲列表区域 -->\n        <div class=\"songs-section\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">歌曲列表</h2>\n            <div class=\"list-controls\">\n              <IonButton fill=\"clear\" size=\"small\" @click=\"toggleSortOrder\">\n                <IonIcon :icon=\"swapVerticalOutline\" />\n              </IonButton>\n              <IonButton fill=\"clear\" size=\"small\" @click=\"toggleSelectMode\">\n                <IonIcon :icon=\"checkboxOutline\" />\n              </IonButton>\n            </div>\n          </div>\n          \n          <!-- 加载状态 -->\n          <div v-if=\"loading\" class=\"loading-container\">\n            <IonSpinner name=\"circular\" />\n            <p>加载中...</p>\n          </div>\n          \n          <!-- 歌曲列表 -->\n          <div v-else-if=\"songs.length > 0\" class=\"songs-list\">\n            <div \n              v-for=\"(song, index) in sortedSongs\" \n              :key=\"song.id\"\n              class=\"song-item\"\n              :class=\"{ \n                selected: selectedSongs.has(song.id),\n                playing: currentSong?.id === song.id\n              }\"\n              @click=\"handleSongClick(song, index)\"\n            >\n              <!-- 多选框 -->\n              <IonCheckbox \n                v-if=\"selectMode\"\n                :checked=\"selectedSongs.has(song.id)\"\n                @ionChange=\"toggleSongSelection(song.id)\"\n                @click.stop\n              />\n              \n              <!-- 歌曲编号/播放状态 -->\n              <div v-else class=\"song-index\">\n                <span v-if=\"currentSong?.id !== song.id\">{{ index + 1 }}</span>\n                <IonIcon v-else :icon=\"volumeHighOutline\" color=\"primary\" />\n              </div>\n              \n              <!-- 歌曲信息 -->\n              <div class=\"song-main\">\n                <div class=\"song-cover\">\n                  <img \n                    :src=\"song.cover || playlistInfo?.cover || '/images/album.jpg'\" \n                    :alt=\"song.name\"\n                    @error=\"handleImageError\"\n                  />\n                </div>\n                \n                <div class=\"song-info\">\n                  <h3 class=\"song-name s-text-truncate\">{{ song.name }}</h3>\n                  <p class=\"song-meta s-text-secondary s-text-truncate\">\n                    {{ song.artists?.map(a => a.name).join(', ') }}\n                    <span v-if=\"song.album\"> - {{ song.album.name }}</span>\n                  </p>\n                </div>\n              </div>\n              \n              <!-- 歌曲操作 -->\n              <div class=\"song-actions\">\n                <IonButton \n                  fill=\"clear\" \n                  size=\"small\"\n                  @click.stop=\"toggleSongLike(song.id)\"\n                  :color=\"musicStore.isLiked(song.id) ? 'primary' : 'medium'\"\n                >\n                  <IonIcon :icon=\"musicStore.isLiked(song.id) ? heart : heartOutline\" />\n                </IonButton>\n                \n                <IonButton fill=\"clear\" size=\"small\" @click.stop=\"moreSongActions(song)\">\n                  <IonIcon :icon=\"ellipsisVerticalOutline\" />\n                </IonButton>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 空状态 -->\n          <div v-else class=\"empty-state\">\n            <IonIcon :icon=\"musicalNotesOutline\" class=\"empty-icon\" />\n            <h3>暂无歌曲</h3>\n            <p>这个歌单还没有添加任何歌曲</p>\n          </div>\n        </div>\n        \n        <!-- 多选操作栏 -->\n        <div v-if=\"selectMode && selectedSongs.size > 0\" class=\"batch-actions\">\n          <div class=\"batch-info\">\n            <span>已选择 {{ selectedSongs.size }} 首歌曲</span>\n          </div>\n          <div class=\"batch-buttons\">\n            <IonButton fill=\"clear\" size=\"small\" @click=\"playSelected\">\n              <IonIcon :icon=\"play\" />\n              播放\n            </IonButton>\n            <IonButton fill=\"clear\" size=\"small\" @click=\"addToPlaylist\">\n              <IonIcon :icon=\"addOutline\" />\n              添加到\n            </IonButton>\n            <IonButton fill=\"clear\" size=\"small\" @click=\"downloadSelected\">\n              <IonIcon :icon=\"downloadOutline\" />\n              下载\n            </IonButton>\n          </div>\n        </div>\n      </div>\n    </IonContent>\n  </IonPage>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonButtons,\n  IonButton,\n  IonIcon,\n  IonAvatar,\n  IonSpinner,\n  IonCheckbox\n} from '@ionic/vue'\nimport {\n  arrowBackOutline,\n  shareOutline,\n  ellipsisVerticalOutline,\n  play,\n  heart,\n  heartOutline,\n  downloadOutline,\n  swapVerticalOutline,\n  checkboxOutline,\n  volumeHighOutline,\n  musicalNotesOutline,\n  addOutline\n} from 'ionicons/icons'\nimport { useRoute, useRouter } from 'vue-router'\nimport { usePlaylistStore } from '@/stores/playlist'\nimport { useMusicStore } from '@/stores/music'\n\nconst route = useRoute()\nconst router = useRouter()\nconst playlistStore = usePlaylistStore()\nconst musicStore = useMusicStore()\n\n// 响应式状态\nconst loading = ref(true)\nconst selectMode = ref(false)\nconst selectedSongs = ref(new Set<number>())\nconst sortOrder = ref<'asc' | 'desc'>('asc')\nconst isSubscribed = ref(false)\n\n// 计算属性\nconst playlistId = computed(() => Number(route.params.id))\nconst playlistInfo = computed(() => playlistStore.currentPlaylist)\nconst songs = computed(() => playlistStore.playlistSongs)\nconst currentSong = computed(() => musicStore.currentSong)\n\nconst sortedSongs = computed(() => {\n  const songsCopy = [...songs.value]\n  return sortOrder.value === 'asc' ? songsCopy : songsCopy.reverse()\n})\n\n// 方法\nconst goBack = () => {\n  router.back()\n}\n\nconst sharePlaylist = () => {\n  // TODO: 分享歌单\n  console.log('分享歌单')\n}\n\nconst moreActions = () => {\n  // TODO: 更多操作\n  console.log('更多操作')\n}\n\nconst playAll = () => {\n  if (songs.value.length > 0) {\n    musicStore.setPlaylist(songs.value, 0)\n  }\n}\n\nconst toggleSubscribe = () => {\n  isSubscribed.value = !isSubscribed.value\n  // TODO: 调用收藏/取消收藏API\n}\n\nconst downloadAll = () => {\n  // TODO: 下载全部歌曲\n  console.log('下载全部')\n}\n\nconst toggleSortOrder = () => {\n  sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\n}\n\nconst toggleSelectMode = () => {\n  selectMode.value = !selectMode.value\n  if (!selectMode.value) {\n    selectedSongs.value.clear()\n  }\n}\n\nconst handleSongClick = (song: any, index: number) => {\n  if (selectMode.value) {\n    toggleSongSelection(song.id)\n  } else {\n    // 播放歌曲\n    musicStore.setPlaylist(songs.value, index)\n  }\n}\n\nconst toggleSongSelection = (songId: number) => {\n  if (selectedSongs.value.has(songId)) {\n    selectedSongs.value.delete(songId)\n  } else {\n    selectedSongs.value.add(songId)\n  }\n}\n\nconst toggleSongLike = (songId: number) => {\n  musicStore.toggleLike(songId)\n}\n\nconst moreSongActions = (song: any) => {\n  // TODO: 更多歌曲操作\n  console.log('歌曲操作', song)\n}\n\nconst playSelected = () => {\n  const selectedSongList = songs.value.filter(song => selectedSongs.value.has(song.id))\n  if (selectedSongList.length > 0) {\n    musicStore.setPlaylist(selectedSongList, 0)\n  }\n  selectMode.value = false\n  selectedSongs.value.clear()\n}\n\nconst addToPlaylist = () => {\n  // TODO: 添加选中歌曲到歌单\n  console.log('添加到歌单')\n}\n\nconst downloadSelected = () => {\n  // TODO: 下载选中歌曲\n  console.log('下载选中')\n}\n\nconst formatPlayCount = (count?: number) => {\n  if (!count) return '0'\n  if (count >= 10000) {\n    return Math.floor(count / 10000) + '万'\n  }\n  return count.toString()\n}\n\nconst handleImageError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/images/album.jpg'\n}\n\nconst handleAvatarError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/images/default-avatar.jpg'\n}\n\n// 生命周期\nonMounted(async () => {\n  loading.value = true\n  try {\n    await playlistStore.loadPlaylist(playlistId.value)\n    // TODO: 检查是否已收藏\n    isSubscribed.value = false\n  } catch (error) {\n    console.error('加载歌单失败:', error)\n  } finally {\n    loading.value = false\n  }\n})\n</script>\n\n<style scoped>\n.playlist-content {\n  --padding-top: 0 !important;\n  --padding-bottom: 120px;\n}\n\n.playlist-page {\n  min-height: 100vh;\n}\n\n/* 沉浸式头部区域 - 优化为更紧凑的设计 */\n.playlist-hero {\n  position: relative;\n  min-height: 280px; /* 从70vh改为固定280px */\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  padding: var(--ion-safe-area-top) 20px 20px;\n}\n\n.hero-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.4) 0%,\n    rgba(0, 0, 0, 0.6) 50%,\n    rgba(0, 0, 0, 0.8) 100%\n  );\n  backdrop-filter: blur(8px);\n}\n\n/* 顶部操作栏 */\n.top-bar {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n.top-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.top-actions ion-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n/* 英雄内容区域 - 紧凑横向布局 */\n.hero-content {\n  position: relative;\n  z-index: 10;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.playlist-main {\n  display: flex;\n  align-items: flex-start;\n  gap: 16px;\n}\n\n.playlist-cover-container {\n  flex-shrink: 0;\n}\n\n.playlist-cover {\n  position: relative;\n  width: 120px;\n  height: 120px;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  transition: transform 0.2s ease;\n}\n\n.playlist-cover:active {\n  transform: scale(0.95);\n}\n\n.playlist-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.play-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.playlist-cover:hover .play-overlay {\n  opacity: 1;\n}\n\n.play-button {\n  width: 48px;\n  height: 48px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--ion-color-primary);\n  font-size: 20px;\n  cursor: pointer;\n  backdrop-filter: blur(10px);\n}\n\n/* 歌单信息 - 优化布局 */\n.playlist-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.playlist-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  line-height: 1.3;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.creator-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.creator-avatar {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.creator-name {\n  font-size: 14px;\n  opacity: 0.9;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n.playlist-stats {\n  font-size: 13px;\n  opacity: 0.8;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n.separator {\n  opacity: 0.6;\n}\n\n/* 操作按钮区域 */\n.hero-actions {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.play-all-button {\n  --background: rgba(255, 255, 255, 0.95);\n  --color: var(--ion-color-primary);\n  --border-radius: 25px;\n  height: 48px;\n  font-weight: 600;\n  font-size: 16px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.action-row {\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n}\n\n.action-row ion-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --color: white;\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n/* 歌曲列表区域 */\n.songs-section {\n  height: auto;\n  padding: 12px 16px;\n}\n\n/* 歌曲列表区域 */\n.songs-section {\n  background: var(--ion-background-color);\n  border-radius: 20px 20px 0 0;\n  padding: 24px 20px 20px;\n  position: relative;\n  z-index: 5;\n  margin-top: -20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--ion-color-light);\n}\n\n.section-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  color: var(--ion-color-dark);\n}\n\n.list-controls {\n  display: flex;\n  gap: 8px;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.loading-container p {\n  margin-top: 16px;\n  color: var(--ion-color-medium);\n}\n\n.songs-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.song-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: var(--ion-color-light);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.song-item:hover {\n  background: var(--ion-color-light-shade);\n  transform: translateX(4px);\n}\n\n.song-item.selected {\n  background: rgba(var(--ion-color-primary-rgb), 0.1);\n  border: 1px solid var(--ion-color-primary);\n}\n\n.song-item.playing {\n  background: rgba(var(--ion-color-primary-rgb), 0.1);\n}\n\n.song-item.playing .song-name {\n  color: var(--ion-color-primary);\n  font-weight: 600;\n}\n\n.song-index {\n  width: 32px;\n  text-align: center;\n  font-size: 14px;\n  color: var(--ion-color-medium);\n  margin-right: 12px;\n}\n\n.song-main {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.song-cover {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.song-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.song-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.song-name {\n  font-size: 15px;\n  font-weight: 500;\n  margin: 0 0 4px 0;\n  color: var(--ion-color-dark);\n}\n\n.song-meta {\n  font-size: 13px;\n  margin: 0;\n  color: var(--ion-color-medium);\n}\n\n.song-actions {\n  display: flex;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 64px;\n  color: var(--ion-color-medium);\n  margin-bottom: 16px;\n}\n\n.empty-state h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: var(--ion-color-dark);\n}\n\n.empty-state p {\n  margin: 0;\n  color: var(--ion-color-medium);\n}\n\n.batch-actions {\n  position: fixed;\n  bottom: calc(50px + var(--ion-safe-area-bottom));\n  left: 0;\n  right: 0;\n  background: var(--ion-background-color);\n  border-top: 1px solid var(--ion-color-light);\n  padding: 12px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 1000;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.batch-info {\n  font-size: 14px;\n  color: var(--ion-color-dark);\n  font-weight: 500;\n}\n\n.batch-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n/* 响应式设计 */\n@media (max-width: 480px) {\n  .playlist-hero {\n    min-height: 60vh;\n    padding: var(--ion-safe-area-top) 16px 16px;\n  }\n  \n  .playlist-cover {\n    width: 160px;\n    height: 160px;\n    border-radius: 16px;\n  }\n  \n  .playlist-title {\n    font-size: 24px;\n  }\n  \n  .action-row {\n    flex-wrap: wrap;\n    gap: 12px;\n  }\n  \n  .action-row ion-button {\n    flex: 1;\n    min-width: 80px;\n  }\n  \n  .songs-section {\n    padding: 20px 16px 16px;\n    margin-top: -16px;\n  }\n  \n  .batch-actions {\n    flex-direction: column;\n    gap: 8px;\n    padding: 16px 20px;\n  }\n  \n  .batch-buttons {\n    justify-content: center;\n    width: 100%;\n  }\n}\n\n/* 适配安全区域 */\n@supports (padding: max(0px)) {\n  .playlist-hero {\n    padding-top: max(var(--ion-safe-area-top), 20px);\n  }\n}\n</style>"],"names":["usePlaylistStore","defineStore","currentPlaylist","ref","playlistSongs","loading","id","playlist","musicApi","_a","songsResponse","formatSong","songsError","error","playlistId","songId","index","song","route","useRoute","router","useRouter","playlistStore","musicStore","useMusicStore","selectMode","selectedSongs","sortOrder","isSubscribed","computed","playlistInfo","songs","currentSong","sortedSongs","songsCopy","goBack","sharePlaylist","moreActions","playAll","toggleSubscribe","downloadAll","toggleSortOrder","toggleSelectMode","handleSongClick","toggleSongSelection","toggleSongLike","moreSongActions","playSelected","selectedSongList","addToPlaylist","downloadSelected","formatPlayCount","count","handleImageError","event","target","handleAvatarError","onMounted","_createBlock","_unref","IonPage","_createVNode","IonContent","_createElementVNode","_hoisted_1","_normalizeStyle","_hoisted_2","IonButton","IonIcon","arrowBackOutline","_hoisted_3","shareOutline","ellipsisVerticalOutline","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_b","_c","_hoisted_9","play","_hoisted_10","_hoisted_11","_toDisplayString","_d","_hoisted_12","_f","_e","_h","_g","_hoisted_14","_j","_i","_hoisted_15","_k","_cache","_l","_hoisted_16","_hoisted_17","heart","heartOutline","downloadOutline","_hoisted_18","_hoisted_19","_hoisted_20","swapVerticalOutline","checkboxOutline","_openBlock","_createElementBlock","_hoisted_21","IonSpinner","_hoisted_22","_Fragment","_renderList","$event","IonCheckbox","_hoisted_24","volumeHighOutline","_hoisted_26","_hoisted_27","_hoisted_29","_hoisted_30","_hoisted_31","_createTextVNode","a","_hoisted_33","_withModifiers","_hoisted_34","musicalNotesOutline","_hoisted_35","_hoisted_36","_hoisted_37","addOutline"],"mappings":"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"}