{"version":3,"file":"index-B4XSCNa2.js","sources":["../../src/views/DailyRecommend/index.vue"],"sourcesContent":["<template>\n  <IonPage>\n    <!-- 沉浸式头部 -->\n    <IonContent :fullscreen=\"true\" class=\"daily-content\">\n      <div class=\"daily-page\">\n        <!-- 沉浸式头部 -->\n        <div class=\"daily-hero\">\n          <!-- 背景渐变 -->\n          <div class=\"hero-overlay\"></div>\n          \n          <!-- 顶部操作栏 -->\n          <div class=\"top-bar\">\n            <IonButton \n              fill=\"clear\" \n              color=\"light\"\n              @click=\"goBack\"\n              class=\"back-button\"\n            >\n              <IonIcon :icon=\"arrowBackOutline\" />\n            </IonButton>\n            \n            <div class=\"top-actions\">\n              <IonButton fill=\"clear\" color=\"light\" @click=\"refresh\">\n                <IonIcon :icon=\"refreshOutline\" />\n              </IonButton>\n              <IonButton fill=\"clear\" color=\"light\" @click=\"moreActions\">\n                <IonIcon :icon=\"ellipsisVerticalOutline\" />\n              </IonButton>\n            </div>\n          </div>\n          \n          <!-- 头部内容 -->\n          <div class=\"hero-content\">\n            <div class=\"daily-icon\">\n              <IonIcon :icon=\"calendarOutline\" />\n              <span class=\"date\">{{ currentDate }}</span>\n            </div>\n            \n            <div class=\"daily-info\">\n              <h1 class=\"daily-title\">每日推荐</h1>\n              <p class=\"daily-subtitle\">根据你的音乐品味精心挑选</p>\n            </div>\n          </div>\n          \n          <!-- 操作按钮 -->\n          <div class=\"hero-actions\">\n            <IonButton \n              expand=\"block\" \n              class=\"play-all-button\"\n              @click=\"playAll\"\n              :disabled=\"!dailySongs.length\"\n            >\n              <IonIcon :icon=\"play\" slot=\"start\" />\n              播放全部 ({{ dailySongs.length }})\n            </IonButton>\n          </div>\n        </div>\n        \n        <!-- 歌曲列表区域 -->\n        <div class=\"content-section\">\n          <!-- 加载状态 -->\n          <div v-if=\"loading\" class=\"loading-container\">\n            <IonSpinner name=\"circular\" />\n            <p>正在为你精选音乐...</p>\n          </div>\n          \n          <!-- 歌曲列表 -->\n          <div v-else-if=\"dailySongs.length > 0\" class=\"songs-list\">\n            <div \n              v-for=\"(song, index) in dailySongs\" \n              :key=\"song.id\"\n              class=\"song-item\"\n              :class=\"{ playing: currentSong?.id === song.id }\"\n              @click=\"playSong(song, index)\"\n            >\n              <!-- 歌曲编号/播放状态 -->\n              <div class=\"song-index\">\n                <span v-if=\"currentSong?.id !== song.id\">{{ index + 1 }}</span>\n                <IonIcon v-else :icon=\"volumeHighOutline\" color=\"primary\" />\n              </div>\n              \n              <!-- 歌曲信息 -->\n              <div class=\"song-main\">\n                <div class=\"song-cover\">\n                  <img \n                    :src=\"song.cover || '/images/album.jpg'\" \n                    :alt=\"song.name\"\n                    @error=\"handleImageError\"\n                  />\n                </div>\n                \n                <div class=\"song-info\">\n                  <h3 class=\"song-name s-text-truncate\">{{ song.name }}</h3>\n                  <p class=\"song-meta s-text-secondary s-text-truncate\">\n                    {{ song.artists?.map(a => a.name).join(', ') }}\n                    <span v-if=\"song.album\"> - {{ song.album.name }}</span>\n                  </p>\n                </div>\n              </div>\n              \n              <!-- 歌曲操作 -->\n              <div class=\"song-actions\">\n                <IonButton \n                  fill=\"clear\" \n                  size=\"small\"\n                  @click.stop=\"toggleSongLike(song.id)\"\n                  :color=\"musicStore.isLiked(song.id) ? 'primary' : 'medium'\"\n                >\n                  <IonIcon :icon=\"musicStore.isLiked(song.id) ? heart : heartOutline\" />\n                </IonButton>\n                \n                <IonButton fill=\"clear\" size=\"small\" @click.stop=\"showSongMenu(song)\">\n                  <IonIcon :icon=\"ellipsisVerticalOutline\" />\n                </IonButton>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 空状态 -->\n          <div v-else class=\"empty-state\">\n            <IonIcon :icon=\"musicalNotesOutline\" class=\"empty-icon\" />\n            <h3>暂无推荐</h3>\n            <p>请先登录以获取个性化推荐</p>\n            <IonButton @click=\"goToLogin\">立即登录</IonButton>\n          </div>\n        </div>\n      </div>\n    </IonContent>\n  </IonPage>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport {\n  IonPage,\n  IonContent,\n  IonButton,\n  IonIcon,\n  IonSpinner,\n  actionSheetController,\n  toastController\n} from '@ionic/vue'\nimport {\n  arrowBackOutline,\n  refreshOutline,\n  ellipsisVerticalOutline,\n  calendarOutline,\n  play,\n  heart,\n  heartOutline,\n  volumeHighOutline,\n  musicalNotesOutline\n} from 'ionicons/icons'\nimport { useMusicStore } from '@/stores/music'\nimport { musicApi, formatSong } from '@/api/music'\n\nconst router = useRouter()\nconst musicStore = useMusicStore()\n\nconst dailySongs = ref<any[]>([])\nconst loading = ref(false)\nconst currentSong = computed(() => musicStore.currentSong)\nconst currentDate = computed(() => new Date().getDate())\n\nonMounted(() => {\n  loadDailyRecommend()\n})\n\nconst loadDailyRecommend = async () => {\n  loading.value = true\n  try {\n    // 尝试获取每日推荐，如果失败则使用测试数据\n    try {\n      const response = await musicApi.getDailyRecommendSongs()\n      dailySongs.value = response.data.dailySongs.map(formatSong)\n    } catch (error) {\n      console.log('获取每日推荐失败，使用默认歌单')\n      // 使用一个默认的推荐歌单\n      const playlistResponse = await musicApi.getPlaylistDetail(3778678)\n      const songsResponse = await musicApi.getPlaylistTracks(3778678, 30)\n      dailySongs.value = songsResponse.songs.map(formatSong)\n    }\n  } catch (error) {\n    console.error('加载每日推荐失败:', error)\n    showToast('加载失败，请稍后重试')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst goBack = () => {\n  router.back()\n}\n\nconst refresh = () => {\n  loadDailyRecommend()\n  showToast('已刷新推荐内容')\n}\n\nconst moreActions = () => {\n  // TODO: 更多操作\n  console.log('更多操作')\n}\n\nconst playAll = () => {\n  if (dailySongs.value.length > 0) {\n    musicStore.setPlaylist(dailySongs.value, 0)\n  }\n}\n\nconst playSong = (song: any, index: number) => {\n  musicStore.setPlaylist(dailySongs.value, index)\n}\n\nconst toggleSongLike = (songId: number) => {\n  musicStore.toggleLike(songId)\n}\n\nconst showSongMenu = async (song: any) => {\n  const actionSheet = await actionSheetController.create({\n    header: song.name,\n    buttons: [\n      {\n        text: '立即播放',\n        icon: play,\n        handler: () => {\n          const index = dailySongs.value.findIndex(s => s.id === song.id)\n          playSong(song, index)\n        }\n      },\n      {\n        text: '下一首播放',\n        handler: () => {\n          showToast('已添加到下一首播放')\n        }\n      },\n      {\n        text: '添加到歌单',\n        handler: () => {\n          showToast('功能开发中')\n        }\n      },\n      {\n        text: '分享',\n        handler: () => {\n          showToast('功能开发中')\n        }\n      },\n      {\n        text: '取消',\n        role: 'cancel'\n      }\n    ]\n  })\n  \n  await actionSheet.present()\n}\n\nconst goToLogin = () => {\n  router.push('/login')\n}\n\nconst handleImageError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/images/album.jpg'\n}\n\nconst showToast = async (message: string) => {\n  const toast = await toastController.create({\n    message,\n    duration: 2000,\n    position: 'bottom'\n  })\n  await toast.present()\n}\n</script>\n\n<style scoped>\n.daily-content {\n  --padding-top: 0 !important;\n  --padding-bottom: 120px;\n}\n\n.daily-page {\n  min-height: 100vh;\n}\n\n/* 沉浸式头部区域 */\n.daily-hero {\n  position: relative;\n  min-height: 50vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  display: flex;\n  flex-direction: column;\n  color: white;\n  padding: var(--ion-safe-area-top) 20px 20px;\n}\n\n.hero-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.2) 0%,\n    rgba(0, 0, 0, 0.4) 100%\n  );\n}\n\n/* 顶部操作栏 */\n.top-bar {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n.top-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.top-actions ion-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n/* 英雄内容区域 */\n.hero-content {\n  position: relative;\n  z-index: 10;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.daily-icon {\n  position: relative;\n  width: 100px;\n  height: 100px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  margin-bottom: 24px;\n  backdrop-filter: blur(10px);\n}\n\n.daily-icon .date {\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n  font-size: 14px;\n  font-weight: bold;\n  background: var(--ion-color-primary);\n  color: white;\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.daily-info {\n  max-width: 100%;\n}\n\n.daily-title {\n  font-size: 32px;\n  font-weight: bold;\n  margin: 0 0 8px 0;\n  line-height: 1.2;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n.daily-subtitle {\n  font-size: 16px;\n  opacity: 0.9;\n  margin: 0;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}\n\n/* 操作按钮 */\n.hero-actions {\n  position: relative;\n  z-index: 10;\n}\n\n.play-all-button {\n  --background: rgba(255, 255, 255, 0.95);\n  --color: var(--ion-color-primary);\n  --border-radius: 25px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 16px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n/* 内容区域 */\n.content-section {\n  background: var(--ion-background-color);\n  border-radius: 20px 20px 0 0;\n  padding: 24px 20px 20px;\n  position: relative;\n  z-index: 5;\n  margin-top: -20px;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.loading-container p {\n  margin-top: 16px;\n  color: var(--ion-color-medium);\n}\n\n/* 歌曲列表 */\n.songs-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.song-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: var(--ion-color-light);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.song-item:hover {\n  background: var(--ion-color-light-shade);\n  transform: translateX(4px);\n}\n\n.song-item.playing {\n  background: rgba(var(--ion-color-primary-rgb), 0.1);\n  border: 1px solid var(--ion-color-primary);\n}\n\n.song-item.playing .song-name {\n  color: var(--ion-color-primary);\n  font-weight: 600;\n}\n\n.song-index {\n  width: 32px;\n  text-align: center;\n  font-size: 14px;\n  color: var(--ion-color-medium);\n  margin-right: 12px;\n}\n\n.song-main {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.song-cover {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.song-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.song-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.song-name {\n  font-size: 15px;\n  font-weight: 500;\n  margin: 0 0 4px 0;\n  color: var(--ion-color-dark);\n}\n\n.song-meta {\n  font-size: 13px;\n  margin: 0;\n  color: var(--ion-color-medium);\n}\n\n.song-actions {\n  display: flex;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n/* 空状态 */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.empty-icon {\n  font-size: 64px;\n  color: var(--ion-color-medium);\n  margin-bottom: 16px;\n}\n\n.empty-state h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: var(--ion-color-dark);\n}\n\n.empty-state p {\n  margin: 0 0 16px 0;\n  color: var(--ion-color-medium);\n}\n\n/* 响应式设计 */\n@media (max-width: 480px) {\n  .daily-hero {\n    min-height: 45vh;\n    padding: var(--ion-safe-area-top) 16px 16px;\n  }\n  \n  .daily-icon {\n    width: 80px;\n    height: 80px;\n    font-size: 32px;\n  }\n  \n  .daily-title {\n    font-size: 28px;\n  }\n  \n  .content-section {\n    padding: 20px 16px 16px;\n    margin-top: -16px;\n  }\n}\n</style>"],"names":["router","useRouter","musicStore","useMusicStore","dailySongs","ref","loading","currentSong","computed","currentDate","onMounted","loadDailyRecommend","response","musicApi","formatSong","playlistResponse","songsResponse","error","showToast","goBack","refresh","moreActions","playAll","playSong","song","index","toggleSongLike","songId","showSongMenu","actionSheetController","play","s","goToLogin","handleImageError","event","target","message","toastController","_createBlock","_unref","IonPage","_createVNode","IonContent","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","IonButton","IonIcon","arrowBackOutline","_hoisted_4","refreshOutline","ellipsisVerticalOutline","_hoisted_5","_hoisted_6","calendarOutline","_hoisted_7","_toDisplayString","_hoisted_8","_createTextVNode","_hoisted_9","_openBlock","_createElementBlock","_hoisted_10","IonSpinner","_cache","_hoisted_11","_Fragment","_renderList","_normalizeClass","_a","$event","_hoisted_13","_b","volumeHighOutline","_hoisted_15","_hoisted_16","_hoisted_18","_hoisted_19","_hoisted_20","_c","a","_hoisted_22","_withModifiers","heart","heartOutline","_hoisted_23","musicalNotesOutline"],"mappings":"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"}