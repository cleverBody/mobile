{"version":3,"file":"index-DdC4jg4E.js","sources":["../../src/stores/discover.ts","../../src/views/Discover/index.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport interface PlaylistItem {\n  id: number\n  name: string\n  cover: string\n  description?: string\n  playCount?: number\n  creator?: string\n}\n\nexport interface ArtistItem {\n  id: number\n  name: string\n  cover: string\n  followers?: number\n  description?: string\n}\n\nexport interface RankingItem {\n  id: number\n  name: string\n  cover: string\n  topSongs: Array<{\n    id: number\n    name: string\n    artist: string\n  }>\n}\n\nexport const useDiscoverStore = defineStore('discover', () => {\n  // 状态\n  const hotPlaylists = ref<PlaylistItem[]>([])\n  const recommendedArtists = ref<ArtistItem[]>([])\n  const topRankings = ref<RankingItem[]>([])\n  const loading = ref(false)\n  \n  // 方法\n  const loadDiscoverData = async () => {\n    if (loading.value) return\n    \n    loading.value = true\n    try {\n      // TODO: 调用实际API\n      await loadMockData()\n    } catch (error) {\n      console.error('加载发现页数据失败:', error)\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  const loadMockData = async () => {\n    // 模拟API延迟\n    await new Promise(resolve => setTimeout(resolve, 800))\n    \n    // 热门歌单\n    hotPlaylists.value = [\n      {\n        id: 1,\n        name: '华语流行精选',\n        cover: '/images/playlist1.jpg',\n        description: '最新最热的华语流行歌曲',\n        playCount: 125000,\n        creator: '音乐推荐官'\n      },\n      {\n        id: 2,\n        name: '欧美金曲榜',\n        cover: '/images/playlist2.jpg',\n        description: '经典欧美流行音乐合集',\n        playCount: 89000,\n        creator: '海外音乐'\n      },\n      {\n        id: 3,\n        name: '日韩热门',\n        cover: '/images/playlist3.jpg',\n        description: 'J-POP和K-POP热门单曲',\n        playCount: 156000,\n        creator: '亚洲音乐'\n      },\n      {\n        id: 4,\n        name: '民谣时光',\n        cover: '/images/playlist4.jpg',\n        description: '温暖治愈的民谣歌曲',\n        playCount: 67000,\n        creator: '民谣诗人'\n      }\n    ]\n    \n    // 推荐歌手\n    recommendedArtists.value = [\n      {\n        id: 1,\n        name: '周杰伦',\n        cover: '/images/artist1.jpg',\n        followers: 2580000,\n        description: '华语流行天王'\n      },\n      {\n        id: 2,\n        name: '陈奕迅',\n        cover: '/images/artist2.jpg',\n        followers: 1890000,\n        description: '香港歌手'\n      },\n      {\n        id: 3,\n        name: '邓紫棋',\n        cover: '/images/artist3.jpg',\n        followers: 1650000,\n        description: '实力女歌手'\n      },\n      {\n        id: 4,\n        name: '林俊杰',\n        cover: '/images/artist4.jpg',\n        followers: 1420000,\n        description: '创作才子'\n      },\n      {\n        id: 5,\n        name: '薛之谦',\n        cover: '/images/artist5.jpg',\n        followers: 1230000,\n        description: '情歌王子'\n      },\n      {\n        id: 6,\n        name: '毛不易',\n        cover: '/images/artist6.jpg',\n        followers: 980000,\n        description: '民谣歌手'\n      }\n    ]\n    \n    // 榜单推荐\n    topRankings.value = [\n      {\n        id: 101,\n        name: '热歌榜',\n        cover: '/images/ranking1.jpg',\n        topSongs: [\n          { id: 1001, name: '稻香', artist: '周杰伦' },\n          { id: 1002, name: '十年', artist: '陈奕迅' },\n          { id: 1003, name: '光年之外', artist: '邓紫棋' }\n        ]\n      },\n      {\n        id: 102,\n        name: '新歌榜',\n        cover: '/images/ranking2.jpg',\n        topSongs: [\n          { id: 2001, name: '最伟大的作品', artist: '周杰伦' },\n          { id: 2002, name: '还是会想你', artist: '林达浪' },\n          { id: 2003, name: '如果声音不记得', artist: '吴青峰' }\n        ]\n      },\n      {\n        id: 103,\n        name: '飙升榜',\n        cover: '/images/ranking3.jpg',\n        topSongs: [\n          { id: 3001, name: '孤勇者', artist: '陈奕迅' },\n          { id: 3002, name: '夜曲', artist: '周杰伦' },\n          { id: 3003, name: '漠河舞厅', artist: '柳爽' }\n        ]\n      }\n    ]\n  }\n  \n  return {\n    // 状态\n    hotPlaylists,\n    recommendedArtists,\n    topRankings,\n    loading,\n    \n    // 方法\n    loadDiscoverData\n  }\n})","<template>\n  <IonPage>\n    <IonHeader>\n      <IonToolbar>\n        <IonTitle>发现音乐</IonTitle>\n        <IonButtons slot=\"end\">\n          <IonButton @click=\"openSearch\">\n            <IonIcon :icon=\"searchOutline\" />\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n    </IonHeader>\n    \n    <IonContent :fullscreen=\"true\">\n      <div class=\"discover-page\">\n        <!-- 搜索栏 -->\n        <div class=\"search-section\">\n          <div class=\"search-bar\" @click=\"openSearch\">\n            <IonIcon :icon=\"searchOutline\" />\n            <span class=\"search-placeholder\">搜索歌曲、歌手、专辑</span>\n          </div>\n        </div>\n        \n        <!-- 快速导航 -->\n        <div class=\"quick-nav\">\n          <div class=\"nav-grid\">\n            <div class=\"nav-item\" @click=\"goToRanking\">\n              <div class=\"nav-icon ranking\">\n                <IonIcon :icon=\"trophyOutline\" />\n              </div>\n              <span class=\"nav-label\">排行榜</span>\n            </div>\n            \n            <div class=\"nav-item\" @click=\"goToPlaylists\">\n              <div class=\"nav-icon playlists\">\n                <IonIcon :icon=\"albumsOutline\" />\n              </div>\n              <span class=\"nav-label\">歌单广场</span>\n            </div>\n            \n            <div class=\"nav-item\" @click=\"goToNewSongs\">\n              <div class=\"nav-icon new-songs\">\n                <IonIcon :icon=\"sparklesOutline\" />\n              </div>\n              <span class=\"nav-label\">新歌速递</span>\n            </div>\n            \n            <div class=\"nav-item\" @click=\"goToArtists\">\n              <div class=\"nav-icon artists\">\n                <IonIcon :icon=\"peopleOutline\" />\n              </div>\n              <span class=\"nav-label\">歌手分类</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 热门歌单 -->\n        <section class=\"content-section\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">热门歌单</h2>\n            <IonButton fill=\"clear\" size=\"small\" @click=\"goToPlaylists\">\n              更多\n              <IonIcon :icon=\"chevronForwardOutline\" />\n            </IonButton>\n          </div>\n          \n          <div class=\"playlist-grid\">\n            <div \n              v-for=\"playlist in hotPlaylists\" \n              :key=\"playlist.id\"\n              class=\"playlist-card\"\n              @click=\"goToPlaylist(playlist.id)\"\n            >\n              <div class=\"playlist-cover\">\n                <img \n                  :src=\"playlist.cover\" \n                  :alt=\"playlist.name\"\n                  @error=\"handleImageError\"\n                />\n                <div class=\"play-count\">\n                  <IonIcon :icon=\"playOutline\" />\n                  <span>{{ formatPlayCount(playlist.playCount) }}</span>\n                </div>\n                <div class=\"play-button\">\n                  <IonIcon :icon=\"play\" />\n                </div>\n              </div>\n              <h3 class=\"playlist-name s-text-truncate\">{{ playlist.name }}</h3>\n              <p class=\"playlist-desc s-text-truncate s-text-secondary\">{{ playlist.description }}</p>\n            </div>\n          </div>\n        </section>\n        \n        <!-- 推荐歌手 -->\n        <section class=\"content-section\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">推荐歌手</h2>\n            <IonButton fill=\"clear\" size=\"small\" @click=\"goToArtists\">\n              更多\n              <IonIcon :icon=\"chevronForwardOutline\" />\n            </IonButton>\n          </div>\n          \n          <div class=\"artist-grid\">\n            <div \n              v-for=\"artist in recommendedArtists\" \n              :key=\"artist.id\"\n              class=\"artist-card\"\n              @click=\"goToArtist(artist.id)\"\n            >\n              <div class=\"artist-avatar\">\n                <img \n                  :src=\"artist.cover\" \n                  :alt=\"artist.name\"\n                  @error=\"handleImageError\"\n                />\n              </div>\n              <h3 class=\"artist-name s-text-truncate\">{{ artist.name }}</h3>\n              <p class=\"artist-followers s-text-secondary\">{{ formatFollowers(artist.followers) }}关注</p>\n            </div>\n          </div>\n        </section>\n        \n        <!-- 榜单推荐 -->\n        <section class=\"content-section\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">榜单推荐</h2>\n            <IonButton fill=\"clear\" size=\"small\" @click=\"goToRanking\">\n              更多\n              <IonIcon :icon=\"chevronForwardOutline\" />\n            </IonButton>\n          </div>\n          \n          <div class=\"ranking-list\">\n            <div \n              v-for=\"(ranking, index) in topRankings\" \n              :key=\"ranking.id\"\n              class=\"ranking-item\"\n              @click=\"goToPlaylist(ranking.id)\"\n            >\n              <div class=\"ranking-cover\">\n                <img \n                  :src=\"ranking.cover\" \n                  :alt=\"ranking.name\"\n                  @error=\"handleImageError\"\n                />\n                <div class=\"ranking-number\">{{ index + 1 }}</div>\n              </div>\n              <div class=\"ranking-info\">\n                <h3 class=\"ranking-name\">{{ ranking.name }}</h3>\n                <div class=\"ranking-songs\">\n                  <div \n                    v-for=\"(song, songIndex) in ranking.topSongs\" \n                    :key=\"song.id\"\n                    class=\"song-item\"\n                  >\n                    <span class=\"song-index\">{{ songIndex + 1 }}.</span>\n                    <span class=\"song-name s-text-truncate\">{{ song.name }}</span>\n                    <span class=\"song-artist s-text-secondary\">{{ song.artist }}</span>\n                  </div>\n                </div>\n              </div>\n              <IonButton fill=\"clear\" size=\"small\">\n                <IonIcon :icon=\"playOutline\" />\n              </IonButton>\n            </div>\n          </div>\n        </section>\n      </div>\n    </IonContent>\n  </IonPage>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonButton,\n  IonButtons,\n  IonIcon\n} from '@ionic/vue'\nimport {\n  searchOutline,\n  trophyOutline,\n  albumsOutline,\n  sparklesOutline,\n  peopleOutline,\n  chevronForwardOutline,\n  play,\n  playOutline\n} from 'ionicons/icons'\nimport { useRouter } from 'vue-router'\nimport { useDiscoverStore } from '@/stores/discover'\n\nconst router = useRouter()\nconst discoverStore = useDiscoverStore()\n\n// 计算属性\nconst hotPlaylists = computed(() => discoverStore.hotPlaylists)\nconst recommendedArtists = computed(() => discoverStore.recommendedArtists)\nconst topRankings = computed(() => discoverStore.topRankings)\n\n// 方法\nconst openSearch = () => {\n  router.push('/search')\n}\n\nconst goToRanking = () => {\n  router.push('/discover/ranking')\n}\n\nconst goToPlaylists = () => {\n  router.push('/discover/playlists')\n}\n\nconst goToNewSongs = () => {\n  router.push('/discover/new-songs')\n}\n\nconst goToArtists = () => {\n  router.push('/discover/artists')\n}\n\nconst goToPlaylist = (id: number) => {\n  router.push(`/playlist/${id}`)\n}\n\nconst goToArtist = (id: number) => {\n  router.push(`/artist/${id}`)\n}\n\nconst formatPlayCount = (count?: number) => {\n  if (!count) return '0'\n  if (count >= 10000) {\n    return Math.floor(count / 10000) + '万'\n  }\n  return count.toString()\n}\n\nconst formatFollowers = (count?: number) => {\n  if (!count) return '0'\n  if (count >= 10000) {\n    return Math.floor(count / 10000) + '万'\n  }\n  return count.toString()\n}\n\nconst handleImageError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/images/album.jpg'\n}\n\n// 生命周期\nonMounted(() => {\n  discoverStore.loadDiscoverData()\n})\n</script>\n\n<style scoped>\n.discover-page {\n  padding: 16px;\n  padding-bottom: 120px;\n}\n\n.search-section {\n  margin-bottom: 24px;\n}\n\n.search-bar {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  background: var(--s-surface);\n  border: 1px solid var(--s-border);\n  border-radius: 24px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.search-bar:hover {\n  background: var(--s-border);\n}\n\n.search-bar ion-icon {\n  margin-right: 8px;\n  color: var(--s-text-secondary);\n}\n\n.search-placeholder {\n  color: var(--s-text-secondary);\n  font-size: 14px;\n}\n\n.quick-nav {\n  margin-bottom: 32px;\n}\n\n.nav-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 16px;\n}\n\n.nav-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.nav-item:active {\n  transform: scale(0.95);\n}\n\n.nav-icon {\n  width: 56px;\n  height: 56px;\n  border-radius: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 24px;\n  margin-bottom: 8px;\n}\n\n.nav-icon.ranking { background: linear-gradient(135deg, #ff6b6b, #ff8e8e); }\n.nav-icon.playlists { background: linear-gradient(135deg, #4ecdc4, #6dd5ed); }\n.nav-icon.new-songs { background: linear-gradient(135deg, #a8edea, #fed6e3); }\n.nav-icon.artists { background: linear-gradient(135deg, #ffd89b, #19547b); }\n\n.nav-label {\n  font-size: 12px;\n  text-align: center;\n  color: var(--s-text-primary);\n}\n\n.content-section {\n  margin-bottom: 32px;\n}\n\n.section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin: 0;\n}\n\n.playlist-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n}\n\n.artist-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n}\n\n.playlist-card,\n.artist-card {\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.playlist-card:active,\n.artist-card:active {\n  transform: scale(0.95);\n}\n\n.playlist-cover {\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.artist-avatar {\n  aspect-ratio: 1;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.playlist-cover img,\n.artist-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.play-count {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 12px;\n  color: white;\n  font-size: 12px;\n}\n\n.play-count ion-icon {\n  margin-right: 4px;\n  font-size: 14px;\n}\n\n.play-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 40px;\n  height: 40px;\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.playlist-card:hover .play-button {\n  opacity: 1;\n}\n\n.playlist-name,\n.artist-name {\n  font-size: 14px;\n  font-weight: 500;\n  margin: 0 0 4px 0;\n}\n\n.playlist-desc,\n.artist-followers {\n  font-size: 12px;\n  margin: 0;\n}\n\n.ranking-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.ranking-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: var(--s-surface);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.ranking-item:hover {\n  background: var(--s-border);\n}\n\n.ranking-cover {\n  position: relative;\n  width: 60px;\n  height: 60px;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.ranking-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.ranking-number {\n  position: absolute;\n  top: 4px;\n  left: 4px;\n  background: var(--s-primary);\n  color: white;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n.ranking-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.ranking-name {\n  font-size: 16px;\n  font-weight: 500;\n  margin: 0 0 8px 0;\n}\n\n.ranking-songs {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.song-item {\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  gap: 4px;\n}\n\n.song-index {\n  color: var(--s-text-secondary);\n  width: 16px;\n  flex-shrink: 0;\n}\n\n.song-name {\n  flex: 1;\n  min-width: 0;\n}\n\n.song-artist {\n  font-size: 11px;\n  margin-left: auto;\n  flex-shrink: 0;\n}\n\n@media (max-width: 480px) {\n  .playlist-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .artist-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .nav-grid {\n    gap: 12px;\n  }\n  \n  .nav-icon {\n    width: 48px;\n    height: 48px;\n  }\n}\n</style>"],"names":["useDiscoverStore","defineStore","hotPlaylists","ref","recommendedArtists","topRankings","loading","loadDiscoverData","loadMockData","error","resolve","router","useRouter","discoverStore","computed","openSearch","goToRanking","goToPlaylists","goToNewSongs","goToArtists","goToPlaylist","id","goToArtist","formatPlayCount","count","formatFollowers","handleImageError","event","target","onMounted","_createBlock","_unref","IonPage","_createVNode","IonHeader","IonToolbar","IonTitle","_cache","IonButtons","IonButton","IonIcon","searchOutline","IonContent","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","trophyOutline","_hoisted_6","albumsOutline","_hoisted_7","sparklesOutline","_hoisted_8","peopleOutline","_hoisted_9","_hoisted_10","chevronForwardOutline","_hoisted_11","_createElementBlock","_Fragment","_renderList","playlist","$event","_hoisted_13","_hoisted_15","playOutline","_toDisplayString","_hoisted_16","play","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","artist","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_openBlock","ranking","index","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","song","songIndex","_hoisted_37","_hoisted_38","_hoisted_39"],"mappings":"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"}