{"version":3,"file":"index-RP_q46UC.js","sources":["../../src/utils/format.ts","../../src/stores/artist.ts","../../src/views/Artist/index.vue"],"sourcesContent":["// 移动端数据格式化工具函数\n// 与桌面端保持一致的数据处理逻辑\n\nimport type { Song, Artist, Album, Playlist } from '@/types/music'\n\n// 格式化歌曲数据\nexport const formatSong = (item: any): Song => {\n  if (!item) return {} as Song\n  \n  // 处理歌手数据\n  const formatArtists = (artistData: any): Artist[] => {\n    if (!artistData) return []\n    if (typeof artistData === 'string') return [{ id: 0, name: artistData, avatar: '' }]\n    \n    const artists = Array.isArray(artistData) ? artistData : [artistData]\n    return artists.map((ar: any) => ({\n      id: ar?.id || 0,\n      name: ar?.name || ar || '未知艺术家',\n      avatar: ar?.img1v1Url || ar?.picUrl || ar?.avatar || ''\n    }))\n  }\n\n  // 处理专辑数据\n  const formatAlbum = (albumData: any) => {\n    if (!albumData) return undefined\n    if (typeof albumData === 'string') return { id: 0, name: albumData, cover: '' }\n    \n    return {\n      id: albumData.id || 0,\n      name: albumData.name || '未知专辑',\n      cover: albumData.picUrl || albumData.cover || ''\n    }\n  }\n\n  return {\n    id: item.id || 0,\n    name: item.name || '未知歌曲',\n    artists: formatArtists(item.ar || item.artists || item.artist),\n    album: formatAlbum(item.al || item.album),\n    duration: Number(item.dt || item.duration || 0),\n    cover: getCoverUrl(item),\n    url: item.url,\n    lyric: item.lyric\n  }\n}\n\n// 格式化歌手数据\nexport const formatArtist = (item: any) => {\n  if (!item) return null\n  \n  return {\n    id: item.id || 0,\n    name: item.name || '未知艺术家',\n    cover: getCoverUrl(item),\n    description: item.description || item.briefDesc || '',\n    followers: item.followeds || item.followers || 0,\n    songsCount: item.musicSize || item.songsCount || 0,\n    albumsCount: item.albumSize || item.albumsCount || 0,\n    mvCount: item.mvSize || item.mvCount || 0,\n    isFollowed: item.followed || false,\n    alias: item.alias?.[0] || '',\n    identify: item.identifyTag?.[0] || item.identify\n  }\n}\n\n// 格式化专辑数据\nexport const formatAlbum = (item: any) => {\n  if (!item) return null\n  \n  return {\n    id: item.id || 0,\n    name: item.name || '未知专辑',\n    cover: getCoverUrl(item),\n    publishTime: item.publishTime ? formatDate(item.publishTime) : '',\n    songsCount: item.size || item.trackCount || 0,\n    description: item.description || item.briefDesc || '',\n    artist: formatArtist(item.artist || item.artists?.[0])\n  }\n}\n\n// 格式化视频数据\nexport const formatVideo = (item: any) => {\n  if (!item) return null\n  \n  return {\n    id: item.id || 0,\n    name: item.name || '未知视频',\n    cover: item.imgurl || item.cover || item.picUrl || '',\n    duration: item.duration || 0,\n    playCount: item.playCount || 0,\n    publishTime: item.publishTime ? formatDate(item.publishTime) : '',\n    artists: formatArtists(item.artists || item.artist || [])\n  }\n}\n\n// 格式化歌单数据\nexport const formatPlaylist = (item: any): Playlist => {\n  if (!item) return {} as Playlist\n  \n  return {\n    id: item.id || 0,\n    name: item.name || '未知歌单',\n    cover: getCoverUrl(item),\n    description: item.description || item.copywriter || '',\n    creator: {\n      id: item.creator?.userId || item.creator?.id || 0,\n      name: item.creator?.nickname || item.creator?.name || '未知用户',\n      avatar: item.creator?.avatarUrl || ''\n    },\n    tracks: item.tracks ? item.tracks.map(formatSong) : [],\n    playCount: item.playCount || 0,\n    trackCount: item.trackCount || item.size || 0,\n    createTime: item.createTime || 0,\n    updateTime: item.updateTime || 0\n  }\n}\n\n// 格式化歌手数组\nexport const formatArtists = (data: any): Artist[] => {\n  if (!data) return []\n  const artists = Array.isArray(data) ? data : [data]\n  return artists.map(formatArtist).filter(Boolean)\n}\n\n// 获取封面URL\nexport const getCoverUrl = (item: any): string => {\n  const cover = \n    item.cover ||\n    item.picUrl ||\n    item.coverUrl ||\n    item.coverImgUrl ||\n    item.imgurl ||\n    item.img1v1Url ||\n    (item.album || item.al)?.picUrl ||\n    ''\n  \n  return cover ? cover.replace(/^http:/, 'https:') : ''\n}\n\n// 获取不同尺寸的封面URL\nexport const getCoverSizeUrl = (url: string, size: number = 300): string => {\n  if (!url) return ''\n  \n  try {\n    const sizeParam = `?param=${size}y${size}`\n    const httpsUrl = url.replace(/^http:/, 'https:')\n    \n    if (httpsUrl.includes('?')) {\n      return httpsUrl.replace(/\\?.*/, sizeParam)\n    }\n    \n    return httpsUrl + sizeParam\n  } catch (error) {\n    console.error('封面URL处理错误:', error)\n    return url\n  }\n}\n\n// 格式化时间戳为日期\nexport const formatDate = (timestamp: number): string => {\n  if (!timestamp) return ''\n  \n  const date = new Date(timestamp)\n  return date.toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  })\n}\n\n// 格式化数字（播放量等）\nexport const formatNumber = (num: number): string => {\n  if (!num || num < 0) return '0'\n  \n  if (num >= 100000000) {\n    return (num / 100000000).toFixed(1) + '亿'\n  }\n  if (num >= 10000) {\n    return (num / 10000).toFixed(1) + '万'\n  }\n  return num.toString()\n}\n\n// 格式化时长（毫秒转分秒）\nexport const formatDuration = (duration: number): string => {\n  if (!duration || duration < 0) return '00:00'\n  \n  const minutes = Math.floor(duration / 60000)\n  const seconds = Math.floor((duration % 60000) / 1000)\n  \n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n}\n\n// 格式化文件大小\nexport const formatFileSize = (bytes: number): string => {\n  if (!bytes || bytes < 0) return '0 B'\n  \n  if (bytes < 1024) {\n    return `${bytes} B`\n  } else if (bytes < 1024 * 1024) {\n    return `${(bytes / 1024).toFixed(1)} KB`\n  } else if (bytes < 1024 * 1024 * 1024) {\n    return `${(bytes / 1024 / 1024).toFixed(1)} MB`\n  } else {\n    return `${(bytes / 1024 / 1024 / 1024).toFixed(1)} GB`\n  }\n}\n","import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport { musicApi } from '@/api/music'\nimport { formatArtist, formatSong, formatAlbum, formatVideo } from '@/utils/format'\n\nexport interface ArtistInfo {\n  id: number\n  name: string\n  cover: string\n  description?: string\n  followers?: number\n  songsCount?: number\n  albumsCount?: number\n  mvCount?: number\n  isFollowed?: boolean\n}\n\nexport interface ArtistSong {\n  id: number\n  name: string\n  artists: Array<{ id: number; name: string }>\n  album?: { id: number; name: string }\n  cover?: string\n  duration?: number\n  playCount?: number\n  publishTime?: string\n}\n\nexport interface ArtistAlbum {\n  id: number\n  name: string\n  cover: string\n  publishTime: string\n  songsCount: number\n  description?: string\n}\n\nexport interface ArtistVideo {\n  id: number\n  name: string\n  cover: string\n  duration: number\n  playCount: number\n  publishTime: string\n  artists: Array<{ id: number; name: string }>\n}\n\nexport const useArtistStore = defineStore('artist', () => {\n  const currentArtist = ref<ArtistInfo | null>(null)\n  const artistSongs = ref<ArtistSong[]>([])\n  const artistAlbums = ref<ArtistAlbum[]>([])\n  const artistVideos = ref<ArtistVideo[]>([])\n  const similarArtists = ref<ArtistInfo[]>([])\n  const loading = ref(false)\n\n  const loadArtist = async (id: number) => {\n    if (loading.value) return\n\n    loading.value = true\n    try {\n      // 获取歌手详情\n      const artistRes = await musicApi.getArtistDetail(id)\n\n      // 处理响应数据结构\n      const artist = artistRes.artist || artistRes\n\n      // 使用统一的格式化函数\n      currentArtist.value = formatArtist(artist)\n\n      // 获取歌手热门歌曲\n      const songsRes = await musicApi.getArtistTopSongs(id)\n\n      // 处理歌曲数据结构\n      const songs = songsRes.hotSongs || songsRes.songs || []\n      artistSongs.value = songs.map(formatSong)\n\n      console.log('歌手信息加载完成:', currentArtist.value.name)\n    } catch (error) {\n      console.error('加载歌手信息失败:', error)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  const loadArtistAlbums = async (id: number) => {\n    try {\n      const albumsRes = await musicApi.getArtistAlbums(id)\n      const albums = albumsRes.hotAlbums || albumsRes.albums || []\n      artistAlbums.value = albums.map(formatAlbum).filter(Boolean)\n    } catch (error) {\n      console.error('加载歌手专辑失败:', error)\n    }\n  }\n\n  const loadArtistVideos = async (id: number) => {\n    try {\n      const videosRes = await musicApi.getArtistVideos(id)\n      const videos = videosRes.mvs || videosRes.videos || []\n      artistVideos.value = videos.map(formatVideo).filter(Boolean)\n    } catch (error) {\n      console.error('加载歌手视频失败:', error)\n    }\n  }\n\n  const followArtist = async (id: number) => {\n    // TODO: 实现关注歌手\n    console.log('关注歌手:', id)\n  }\n\n  const unfollowArtist = async (id: number) => {\n    // TODO: 实现取消关注歌手\n    console.log('取消关注歌手:', id)\n  }\n\n  const clearArtist = () => {\n    currentArtist.value = null\n    artistSongs.value = []\n    artistAlbums.value = []\n    artistVideos.value = []\n    similarArtists.value = []\n  }\n\n  return {\n    // 状态\n    currentArtist,\n    artistSongs,\n    artistAlbums,\n    artistVideos,\n    similarArtists,\n    loading,\n\n    // 方法\n    loadArtist,\n    loadArtistAlbums,\n    loadArtistVideos,\n    followArtist,\n    unfollowArtist,\n    clearArtist\n  }\n})\n","<template>\n  <IonPage>\n    <!-- 沉浸式头部，无传统Header -->\n    <IonContent :fullscreen=\"true\" class=\"artist-content\">\n      <div class=\"artist-page\">\n        <!-- 沉浸式艺术家头部 -->\n        <div class=\"artist-hero\" :style=\"{ backgroundImage: `url(${currentArtist?.cover || '/images/artist-bg.jpg'})` }\">\n          <!-- 背景渐变遮罩 -->\n          <div class=\"hero-overlay\"></div>\n\n          <!-- 顶部操作栏 -->\n          <div class=\"top-bar\">\n            <IonButton\n              fill=\"clear\"\n              color=\"light\"\n              @click=\"goBack\"\n              class=\"back-button\"\n            >\n              <IonIcon :icon=\"arrowBackOutline\" />\n            </IonButton>\n\n            <div class=\"top-actions\">\n              <IonButton fill=\"clear\" color=\"light\" @click=\"shareArtist\">\n                <IonIcon :icon=\"shareOutline\" />\n              </IonButton>\n              <IonButton fill=\"clear\" color=\"light\" @click=\"moreActions\">\n                <IonIcon :icon=\"ellipsisVerticalOutline\" />\n              </IonButton>\n            </div>\n          </div>\n\n          <!-- 艺术家信息 -->\n          <div class=\"hero-content\">\n            <div class=\"artist-avatar-container\">\n              <div class=\"artist-avatar\">\n                <img\n                  :src=\"currentArtist?.cover || '/images/default-avatar.jpg'\"\n                  :alt=\"currentArtist?.name\"\n                  @error=\"handleImageError\"\n                />\n                <div class=\"verified-badge\" v-if=\"currentArtist?.isFollowed\">\n                  <IonIcon :icon=\"checkmarkCircleOutline\" />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"artist-info\">\n              <h1 class=\"artist-title\">{{ currentArtist?.name || '加载中...' }}</h1>\n\n              <div class=\"artist-stats\">\n                <span>{{ formatNumber(currentArtist?.followers) }}粉丝</span>\n                <span class=\"separator\">•</span>\n                <span>{{ currentArtist?.songsCount || 0 }}首歌</span>\n                <span class=\"separator\">•</span>\n                <span>{{ currentArtist?.albumsCount || 0 }}张专辑</span>\n              </div>\n\n              <p v-if=\"currentArtist?.description\" class=\"artist-description\">\n                {{ currentArtist.description }}\n              </p>\n            </div>\n          </div>\n\n          <!-- 底部操作按钮 -->\n          <div class=\"hero-actions\">\n            <IonButton\n              expand=\"block\"\n              class=\"play-all-button\"\n              @click=\"playAll\"\n              :disabled=\"!artistSongs.length\"\n            >\n              <IonIcon :icon=\"play\" slot=\"start\" />\n              播放全部\n            </IonButton>\n\n            <div class=\"action-row\">\n              <IonButton\n                fill=\"clear\"\n                color=\"light\"\n                @click=\"handleFollow\"\n                :color=\"currentArtist?.isFollowed ? 'danger' : 'light'\"\n              >\n                <IonIcon :icon=\"currentArtist?.isFollowed ? heart : heartOutline\" />\n                {{ currentArtist?.isFollowed ? '已关注' : '关注' }}\n              </IonButton>\n\n              <IonButton fill=\"clear\" color=\"light\" @click=\"shufflePlay\">\n                <IonIcon :icon=\"shuffleOutline\" />\n                随机播放\n              </IonButton>\n\n              <IonButton fill=\"clear\" color=\"light\" @click=\"shareArtist\">\n                <IonIcon :icon=\"shareOutline\" />\n                分享\n              </IonButton>\n            </div>\n          </div>\n        </div>\n\n        <!-- 内容区域 -->\n        <div class=\"content-section\">\n          <!-- 选项卡 -->\n          <div class=\"section-tabs\">\n            <IonSegment v-model=\"selectedTab\" @ionChange=\"handleTabChange\">\n              <IonSegmentButton value=\"songs\">\n                <IonLabel>单曲</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"albums\">\n                <IonLabel>专辑</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"videos\">\n                <IonLabel>视频</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </div>\n\n          <!-- 加载状态 -->\n          <div v-if=\"loading\" class=\"loading-container\">\n            <IonSpinner name=\"circular\" />\n            <p>加载中...</p>\n          </div>\n\n          <!-- 单曲列表 -->\n          <div v-else-if=\"selectedTab === 'songs' && artistSongs.length > 0\" class=\"songs-list\">\n            <div\n              v-for=\"(song, index) in artistSongs\"\n              :key=\"song.id\"\n              class=\"song-item\"\n              :class=\"{ playing: currentSong?.id === song.id }\"\n              @click=\"playSong(song, index)\"\n            >\n              <!-- 歌曲编号/播放状态 -->\n              <div class=\"song-index\">\n                <span v-if=\"currentSong?.id !== song.id\">{{ index + 1 }}</span>\n                <IonIcon v-else :icon=\"volumeHighOutline\" color=\"primary\" />\n              </div>\n\n              <!-- 歌曲信息 -->\n              <div class=\"song-main\">\n                <div class=\"song-cover\">\n                  <img\n                    :src=\"song.cover || currentArtist?.cover || '/images/album.jpg'\"\n                    :alt=\"song.name\"\n                    @error=\"handleImageError\"\n                  />\n                </div>\n\n                <div class=\"song-info\">\n                  <h3 class=\"song-name s-text-truncate\">{{ song.name }}</h3>\n                  <p class=\"song-meta s-text-secondary s-text-truncate\">\n                    {{ song.album?.name }} • {{ formatDuration(song.duration) }}\n                    <span v-if=\"song.playCount\"> • {{ formatPlayCount(song.playCount) }}次播放</span>\n                  </p>\n                </div>\n              </div>\n\n              <!-- 歌曲操作 -->\n              <div class=\"song-actions\">\n                <IonButton\n                  fill=\"clear\"\n                  size=\"small\"\n                  @click.stop=\"toggleSongLike(song.id)\"\n                  :color=\"musicStore.isLiked(song.id) ? 'primary' : 'medium'\"\n                >\n                  <IonIcon :icon=\"musicStore.isLiked(song.id) ? heart : heartOutline\" />\n                </IonButton>\n\n                <IonButton fill=\"clear\" size=\"small\" @click.stop=\"showSongMenu(song)\">\n                  <IonIcon :icon=\"ellipsisVerticalOutline\" />\n                </IonButton>\n              </div>\n            </div>\n          </div>\n\n          <!-- 专辑列表 -->\n          <div v-else-if=\"selectedTab === 'albums'\" class=\"albums-section\">\n            <div v-if=\"artistAlbums.length > 0\" class=\"albums-grid\">\n              <div\n                v-for=\"album in artistAlbums\"\n                :key=\"album.id\"\n                class=\"album-item\"\n                @click=\"goToAlbum(album.id)\"\n              >\n                <div class=\"album-cover\">\n                  <img :src=\"album.cover\" :alt=\"album.name\" @error=\"handleImageError\" />\n                  <div class=\"album-overlay\">\n                    <IonIcon :icon=\"play\" />\n                  </div>\n                </div>\n                <div class=\"album-info\">\n                  <h4>{{ album.name }}</h4>\n                  <p>{{ album.publishTime }} · {{ album.songsCount }}首</p>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"empty-state\">\n              <IonIcon :icon=\"albumsOutline\" class=\"empty-icon\" />\n              <h3>暂无专辑</h3>\n              <p>该艺术家暂时没有专辑</p>\n            </div>\n          </div>\n\n          <!-- 视频列表 -->\n          <div v-else-if=\"selectedTab === 'videos'\" class=\"videos-section\">\n            <div v-if=\"artistVideos.length > 0\" class=\"videos-grid\">\n              <div\n                v-for=\"video in artistVideos\"\n                :key=\"video.id\"\n                class=\"video-item\"\n                @click=\"playVideo(video.id)\"\n              >\n                <div class=\"video-cover\">\n                  <img :src=\"video.cover\" :alt=\"video.name\" @error=\"handleImageError\" />\n                  <div class=\"video-overlay\">\n                    <IonIcon :icon=\"play\" />\n                  </div>\n                  <div class=\"video-duration\">{{ formatDuration(video.duration) }}</div>\n                </div>\n                <div class=\"video-info\">\n                  <h4>{{ video.name }}</h4>\n                  <p>{{ formatNumber(video.playCount) }}次播放 · {{ video.publishTime }}</p>\n                </div>\n              </div>\n            </div>\n            <div v-else class=\"empty-state\">\n              <IonIcon :icon=\"volumeHighOutline\" class=\"empty-icon\" />\n              <h3>暂无视频</h3>\n              <p>该艺术家暂时没有视频</p>\n            </div>\n          </div>\n\n          <!-- 空状态 -->\n          <div v-else class=\"empty-state\">\n            <IonIcon :icon=\"musicalNotesOutline\" class=\"empty-icon\" />\n            <h3>暂无内容</h3>\n            <p>该艺术家暂时没有相关内容</p>\n          </div>\n        </div>\n      </div>\n    </IonContent>\n  </IonPage>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport {\n  IonPage,\n  IonContent,\n  IonButton,\n  IonIcon,\n  IonSpinner,\n  IonSegment,\n  IonSegmentButton,\n  IonLabel,\n  actionSheetController,\n  toastController\n} from '@ionic/vue'\nimport {\n  arrowBackOutline,\n  shareOutline,\n  ellipsisVerticalOutline,\n  play,\n  heart,\n  heartOutline,\n  shuffleOutline,\n  checkmarkCircleOutline,\n  volumeHighOutline,\n  musicalNotesOutline,\n  albumsOutline,\n  peopleOutline\n} from 'ionicons/icons'\nimport { useArtistStore } from '@/stores/artist'\nimport { useMusicStore } from '@/stores/music'\n\nconst route = useRoute()\nconst router = useRouter()\nconst artistStore = useArtistStore()\nconst musicStore = useMusicStore()\n\nconst selectedTab = ref('songs')\n\n// 使用 storeToRefs 保持响应性\nconst { currentArtist, artistSongs, artistAlbums, artistVideos, similarArtists, loading } = artistStore\nconst currentSong = computed(() => musicStore.currentSong)\n\nonMounted(() => {\n  const artistId = parseInt(route.query.id as string)\n  if (artistId) {\n    artistStore.loadArtist(artistId)\n    // 根据当前标签页加载对应数据\n    if (selectedTab.value === 'albums') {\n      artistStore.loadArtistAlbums(artistId)\n    } else if (selectedTab.value === 'videos') {\n      artistStore.loadArtistVideos(artistId)\n    }\n  }\n})\n\nconst formatNumber = (num?: number) => {\n  if (!num) return '0'\n  if (num >= 100000000) {\n    return (num / 100000000).toFixed(1) + '亿'\n  }\n  if (num >= 10000) {\n    return (num / 10000).toFixed(1) + '万'\n  }\n  return num.toString()\n}\n\nconst formatDuration = (duration?: number) => {\n  if (!duration) return '00:00'\n  const minutes = Math.floor(duration / 60000)\n  const seconds = Math.floor((duration % 60000) / 1000)\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n}\n\nconst formatPlayCount = (count?: number) => {\n  return formatNumber(count)\n}\n\nconst goBack = () => {\n  router.back()\n}\n\nconst shareArtist = () => {\n  // TODO: 分享艺术家\n  console.log('分享艺术家')\n}\n\nconst moreActions = () => {\n  // TODO: 更多操作\n  console.log('更多操作')\n}\n\nconst handleFollow = async () => {\n  if (!currentArtist.value) return\n\n  try {\n    if (currentArtist.value.isFollowed) {\n      await artistStore.unfollowArtist(currentArtist.value.id)\n      showToast('已取消关注')\n    } else {\n      await artistStore.followArtist(currentArtist.value.id)\n      showToast('关注成功')\n    }\n  } catch (error) {\n    showToast('操作失败')\n  }\n}\n\nconst playAll = () => {\n  if (artistSongs.value.length > 0) {\n    musicStore.setPlaylist(artistSongs.value, 0)\n  }\n}\n\nconst shufflePlay = () => {\n  if (artistSongs.value.length > 0) {\n    // 随机打乱播放列表\n    const shuffled = [...artistSongs.value].sort(() => Math.random() - 0.5)\n    musicStore.setPlaylist(shuffled, 0)\n    showToast('开始随机播放')\n  }\n}\n\nconst playSong = (song: any, index: number) => {\n  musicStore.setPlaylist(artistSongs.value, index)\n}\n\nconst toggleSongLike = (songId: number) => {\n  musicStore.toggleLike(songId)\n}\n\nconst showSongMenu = async (song: any) => {\n  const actionSheet = await actionSheetController.create({\n    header: song.name,\n    buttons: [\n      {\n        text: '立即播放',\n        icon: play,\n        handler: () => {\n          const index = artistSongs.value.findIndex(s => s.id === song.id)\n          playSong(song, index)\n        }\n      },\n      {\n        text: '下一首播放',\n        handler: () => {\n          // TODO: 添加到播放队列下一首\n          showToast('已添加到下一首播放')\n        }\n      },\n      {\n        text: '添加到歌单',\n        handler: () => {\n          // TODO: 显示歌单选择器\n          showToast('功能开发中')\n        }\n      },\n      {\n        text: '分享',\n        handler: () => {\n          // TODO: 分享功能\n          showToast('功能开发中')\n        }\n      },\n      {\n        text: '取消',\n        role: 'cancel'\n      }\n    ]\n  })\n\n  await actionSheet.present()\n}\n\nconst handleTabChange = (event: any) => {\n  selectedTab.value = event.detail.value\n  const artistId = parseInt(route.query.id as string)\n\n  // 根据标签页加载对应数据\n  if (artistId) {\n    if (selectedTab.value === 'albums' && artistAlbums.value.length === 0) {\n      artistStore.loadArtistAlbums(artistId)\n    } else if (selectedTab.value === 'videos' && artistVideos.value.length === 0) {\n      artistStore.loadArtistVideos(artistId)\n    }\n  }\n}\n\nconst handleImageError = (event: Event) => {\n  const target = event.target as HTMLImageElement\n  target.src = '/images/default-avatar.jpg'\n}\n\nconst goToAlbum = (albumId: number) => {\n  router.push({ name: 'Album', params: { id: albumId } })\n}\n\nconst playVideo = (videoId: number) => {\n  // TODO: 播放视频\n  console.log('播放视频:', videoId)\n}\n\nconst showToast = async (message: string) => {\n  const toast = await toastController.create({\n    message,\n    duration: 2000,\n    position: 'bottom'\n  })\n  await toast.present()\n}\n</script>\n\n<style scoped>\n.artist-content {\n  --padding-top: 0 !important;\n  --padding-bottom: 120px;\n}\n\n.artist-page {\n  min-height: 100vh;\n}\n\n/* 沉浸式头部区域 */\n.artist-hero {\n  position: relative;\n  min-height: 70vh;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  padding: var(--ion-safe-area-top) 20px 20px;\n}\n\n.hero-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0.4) 0%,\n    rgba(0, 0, 0, 0.6) 50%,\n    rgba(0, 0, 0, 0.8) 100%\n  );\n  backdrop-filter: blur(8px);\n}\n\n/* 顶部操作栏 */\n.top-bar {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n.top-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.top-actions ion-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --border-radius: 50%;\n  width: 44px;\n  height: 44px;\n}\n\n/* 英雄内容区域 */\n.hero-content {\n  position: relative;\n  z-index: 10;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.artist-avatar-container {\n  margin-bottom: 24px;\n}\n\n.artist-avatar {\n  position: relative;\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n  overflow: hidden;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);\n  transition: transform 0.3s ease;\n}\n\n.artist-avatar:active {\n  transform: scale(0.98);\n}\n\n.artist-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.verified-badge {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: 32px;\n  height: 32px;\n  background: var(--ion-color-primary);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 18px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n}\n\n/* 艺术家信息 */\n.artist-info {\n  max-width: 100%;\n}\n\n.artist-title {\n  font-size: 32px;\n  font-weight: bold;\n  margin: 0 0 16px 0;\n  line-height: 1.2;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\n}\n\n.artist-stats {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 16px;\n  opacity: 0.9;\n  margin-bottom: 16px;\n}\n\n.separator {\n  opacity: 0.6;\n}\n\n.artist-description {\n  font-size: 14px;\n  line-height: 1.5;\n  opacity: 0.9;\n  margin: 0;\n  max-width: 320px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n}\n\n/* 英雄操作按钮 */\n.hero-actions {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.play-all-button {\n  --background: rgba(255, 255, 255, 0.95);\n  --color: var(--ion-color-primary);\n  --border-radius: 25px;\n  height: 50px;\n  font-weight: 600;\n  font-size: 16px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n}\n\n.action-row {\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n}\n\n.action-row ion-button {\n  --background: rgba(0, 0, 0, 0.3);\n  --color: white;\n  --border-radius: 20px;\n  backdrop-filter: blur(10px);\n  font-size: 12px;\n  flex-direction: column;\n  height: auto;\n  padding: 12px 16px;\n}\n\n/* 内容区域 */\n.content-section {\n  background: var(--ion-background-color);\n  border-radius: 20px 20px 0 0;\n  padding: 24px 20px 20px;\n  position: relative;\n  z-index: 5;\n  margin-top: -20px;\n}\n\n.section-tabs {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.loading-container p {\n  margin-top: 16px;\n  color: var(--ion-color-medium);\n}\n\n/* 歌曲列表 */\n.songs-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.song-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: var(--ion-color-light);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.song-item:hover {\n  background: var(--ion-color-light-shade);\n  transform: translateX(4px);\n}\n\n.song-item.playing {\n  background: rgba(var(--ion-color-primary-rgb), 0.1);\n  border: 1px solid var(--ion-color-primary);\n}\n\n.song-item.playing .song-name {\n  color: var(--ion-color-primary);\n  font-weight: 600;\n}\n\n.song-index {\n  width: 32px;\n  text-align: center;\n  font-size: 14px;\n  color: var(--ion-color-medium);\n  margin-right: 12px;\n}\n\n.song-main {\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.song-cover {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.song-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.song-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.song-name {\n  font-size: 15px;\n  font-weight: 500;\n  margin: 0 0 4px 0;\n  color: var(--ion-color-dark);\n}\n\n.song-meta {\n  font-size: 13px;\n  margin: 0;\n  color: var(--ion-color-medium);\n}\n\n.song-actions {\n  display: flex;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n/* 专辑网格 */\n.albums-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: 16px;\n  padding: 16px;\n}\n\n.album-item {\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.album-item:active {\n  transform: scale(0.98);\n}\n\n.album-cover {\n  position: relative;\n  aspect-ratio: 1;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.album-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.album-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.album-item:hover .album-overlay {\n  opacity: 1;\n}\n\n.album-overlay ion-icon {\n  font-size: 32px;\n  color: white;\n}\n\n.album-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--ion-color-dark);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.album-info p {\n  margin: 0;\n  font-size: 12px;\n  color: var(--ion-color-medium);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 视频网格 */\n.videos-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 16px;\n  padding: 16px;\n}\n\n.video-item {\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.video-item:active {\n  transform: scale(0.98);\n}\n\n.video-cover {\n  position: relative;\n  aspect-ratio: 16/9;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n\n.video-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.video-overlay {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.8;\n  transition: opacity 0.2s ease;\n}\n\n.video-item:hover .video-overlay {\n  opacity: 1;\n}\n\n.video-overlay ion-icon {\n  font-size: 24px;\n  color: white;\n}\n\n.video-duration {\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.video-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--ion-color-dark);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.video-info p {\n  margin: 0;\n  font-size: 12px;\n  color: var(--ion-color-medium);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 空状态和开发中状态 */\n.empty-state,\n.coming-soon {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px;\n  text-align: center;\n}\n\n.empty-icon,\n.coming-icon {\n  font-size: 64px;\n  color: var(--ion-color-medium);\n  margin-bottom: 16px;\n}\n\n.empty-state h3,\n.coming-soon h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: var(--ion-color-dark);\n}\n\n.empty-state p,\n.coming-soon p {\n  margin: 0;\n  color: var(--ion-color-medium);\n}\n\n/* 响应式设计 */\n@media (max-width: 480px) {\n  .artist-hero {\n    min-height: 60vh;\n    padding: var(--ion-safe-area-top) 16px 16px;\n  }\n\n  .artist-avatar {\n    width: 150px;\n    height: 150px;\n  }\n\n  .artist-title {\n    font-size: 28px;\n  }\n\n  .artist-stats {\n    font-size: 14px;\n    flex-wrap: wrap;\n    gap: 6px;\n  }\n\n  .action-row {\n    flex-wrap: wrap;\n    gap: 12px;\n  }\n\n  .action-row ion-button {\n    flex: 1;\n    min-width: 80px;\n  }\n\n  .content-section {\n    padding: 20px 16px 16px;\n    margin-top: -16px;\n  }\n}\n\n/* 适配安全区域 */\n@supports (padding: max(0px)) {\n  .artist-hero {\n    padding-top: max(var(--ion-safe-area-top), 20px);\n  }\n}\n</style>\n"],"names":["formatSong","item","formatArtists","artistData","ar","formatAlbum","albumData","getCoverUrl","formatArtist","_a","_b","formatDate","formatVideo","data","cover","timestamp","useArtistStore","defineStore","currentArtist","ref","artistSongs","artistAlbums","artistVideos","similarArtists","loading","id","artistRes","musicApi","artist","songsRes","songs","error","albumsRes","albums","videosRes","videos","route","useRoute","router","useRouter","artistStore","musicStore","useMusicStore","selectedTab","currentSong","computed","onMounted","artistId","formatNumber","num","formatDuration","duration","minutes","seconds","formatPlayCount","count","goBack","shareArtist","moreActions","handleFollow","showToast","playAll","shufflePlay","shuffled","playSong","song","index","toggleSongLike","songId","showSongMenu","actionSheetController","play","s","handleTabChange","event","handleImageError","target","goToAlbum","albumId","playVideo","videoId","message","toastController","_createBlock","_unref","IonPage","_createVNode","IonContent","_createElementVNode","_hoisted_1","_normalizeStyle","_hoisted_2","IonButton","IonIcon","arrowBackOutline","_hoisted_3","shareOutline","ellipsisVerticalOutline","_hoisted_4","_hoisted_5","_hoisted_6","_openBlock","_createElementBlock","_hoisted_8","checkmarkCircleOutline","_hoisted_9","_hoisted_10","_toDisplayString","_hoisted_11","_cache","_hoisted_12","_hoisted_13","_hoisted_14","heart","heartOutline","shuffleOutline","_hoisted_15","_hoisted_16","IonSegment","$event","IonSegmentButton","IonLabel","_hoisted_17","IonSpinner","_hoisted_18","_Fragment","_renderList","_normalizeClass","_hoisted_20","volumeHighOutline","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_createTextVNode","_d","_hoisted_28","_hoisted_29","_withModifiers","_hoisted_30","_hoisted_31","album","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_37","albumsOutline","_hoisted_38","_hoisted_39","video","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","musicalNotesOutline"],"mappings":"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"}